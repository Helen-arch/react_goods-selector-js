{"version":3,"sources":["App.jsx","index.jsx"],"names":["goods","App","useState","selectedGood","setSelectedGood","selected","renderButton","test","style","value","item","type","className","onClick","headerWithGood","defaultHeader","renderedGoods","map","good","isCelected","valueToSet","testText","buttonText","rowStyle","ReactDOM","render","document","getElementById"],"mappings":"2NAIaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAAwCC,mBAAS,OAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACMC,EAA4B,KAAjBF,EAEXG,EAAe,SAACC,EAAMC,GAAP,IAAcC,EAAd,uDAAsB,GAAIC,EAA1B,uDAAiC,GAAjC,OACnB,wBACE,UAASH,EACTI,KAAK,SACLC,UAAWJ,EACXK,QAAS,kBAAMT,EAAgBM,IAJjC,SAMGD,KAICK,EACJ,qBAAIF,UAAU,sCAAd,oBACMT,EADN,gBAGGG,EAAa,cAAe,kBAI3BS,EACJ,oBAAIH,UAAU,sCAAd,+BAKII,EAAgBhB,EAAMiB,KAAI,SAACC,GAC/B,IAAMC,EAAahB,IAAiBe,EAE9BE,EAAaD,EAAaD,EAAO,GACjCG,EAAWF,EAAa,YAAc,eACtCP,EAAYO,EAAa,SAAW,iBACpCG,EAAaH,EAAa,IAAM,IAChCI,GAAYJ,GAAc,+BAEhC,OACE,qBACE,UAAQ,OAERP,UAAWW,EAHb,UAKE,6BACGjB,EAAae,EAAUT,EAAWU,EAAYF,KAGjD,oBAAI,UAAQ,YAAYR,UAAU,eAAlC,SACGM,MAREA,MAcX,OACE,uBAAMN,UAAU,oBAAhB,UACGP,EAAWS,EAAiBC,EAE7B,uBAAOH,UAAU,QAAjB,SACE,gCACGI,UC3EXQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.648cc782.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [selectedGood, setSelectedGood] = useState('Jam');\n  const selected = selectedGood !== '';\n\n  const renderButton = (test, style, value = '', item = '') => (\n    <button\n      data-cy={test}\n      type=\"button\"\n      className={style}\n      onClick={() => setSelectedGood(item)}\n    >\n      {value}\n    </button>\n  );\n\n  const headerWithGood = (\n    <h1 className=\"title is-flex is-align-items-center\">\n      {`${selectedGood} is selected`}\n\n      {renderButton('ClearButton', 'delete ml-3')}\n    </h1>\n  );\n\n  const defaultHeader = (\n    <h1 className=\"title is-flex is-align-items-center\">\n      No goods selected\n    </h1>\n  );\n\n  const renderedGoods = goods.map((good) => {\n    const isCelected = selectedGood !== good;\n\n    const valueToSet = isCelected ? good : '';\n    const testText = isCelected ? 'AddButton' : 'RemoveButton';\n    const className = isCelected ? 'button' : 'button is-info';\n    const buttonText = isCelected ? '+' : '-';\n    const rowStyle = !isCelected && 'has-background-success-light';\n\n    return (\n      <tr\n        data-cy=\"Good\"\n        key={good}\n        className={rowStyle}\n      >\n        <td>\n          {renderButton(testText, className, buttonText, valueToSet)}\n        </td>\n\n        <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n          {good}\n        </td>\n      </tr>\n    );\n  });\n\n  return (\n    <main className=\"section container\">\n      {selected ? headerWithGood : defaultHeader}\n\n      <table className=\"table\">\n        <tbody>\n          {renderedGoods}\n        </tbody>\n      </table>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}